# NOTE: A separate config file is necessary for Sentinel-3B, since the Level-1 pre-processor
#       expects one config file per platform (at least for now)
pysiral_package_config:
  l1p_id: &l1p_id lan_l2_si
  l1p_version: &l1p_version 1.1
  supported_source_datasets:
    - "sentinel3a_nrt_l2lansi_v5p0"
    - "sentinel3a_nrt_l2lansi_v5p0"
    - "sentinel3b_rep_l2lansi_v5p0"
    - "sentinel3b_rep_l2lansi_v5p0"

# (Optional) Source data discovery settings
source_data_discovery: {}

# (Optional) Source data loader settings
source_data_loader: {}

# Detection of polar ocean data from source data
polar_ocean_detection:
    orbit_coverage: custom_orbit_segment
    target_hemisphere: [nh, sh]
    polar_latitude_threshold: 45.0
    allow_nonocean_segment_nrecords: 1000
    split_at_time_gap_seconds: 10.
    detect_radar_mode_change: True

# Settings for merging orbit segments
orbit_segment_connect:
    max_timedelta_seconds: 10.

# Settings for l1p netCDF output
output:
    l1p_id: *l1p_id
    l1p_version: *l1p_version
    export_minimum_n_records: 10


# NOTE: if no options are required use an empty mapping {} instead of null!
processing_items:

    # Compute the leading edge quality indicator
    # This class will add three parameters to the l1p classifier data group:
    #  1. Leading edge quality
    #  2. first maximum index
    #  3. first maximum power (in units of peak power)
    - label: "Compute Leading Edge Quality"
      stage: post_ocean_segment_extraction
      module_name: pysiral.waveform
      class_name: L1PLeadingEdgeQuality
      options:
        # Power threshold for the normalized waveform
        # that the first maximum has to exceed
        first_maximum_normalized_power_threshold:
            lrm: 0.5
            sar: 0.25
            # Number of range bins prior to the first maximum
        # that are to compute the quality factor
        leading_edge_lookup_window:
            lrm: 20
            sar: 30
            # Minimum valid first maximum index
        minimum_valid_first_maximum_index:
            lrm: 10
            sar: 10

    # Compute pulse peakiness
    - label: "Compute Pulse Peakiness"
      stage: post_ocean_segment_extraction
      module_name: pysiral.waveform
      class_name: L1PWaveformPeakiness
      options:
          skip_first_range_bins: 0
          norm_is_range_bin: True

    # Compute normed pulse peakiness
    - label: "Compute Pulse Peakiness (normed)"
      stage: post_ocean_segment_extraction
      module_name: pysiral.waveform
      class_name: L1PWaveformPeakiness
      options:
          skip_first_range_bins: 0
          norm_is_range_bin: False

    # Compute the leading edge width parameters (full, first half & second half)
    - label: "Compute Leading Edge Width"
      stage: post_ocean_segment_extraction
      module_name: pysiral.waveform
      class_name: L1PLeadingEdgeWidth
      options:
          tfmra_leading_edge_start: 0.05
          tfmra_leading_edge_center: 0.5
          tfmra_leading_edge_end: 0.95
          tfmra_options:
            noise_level_range_bin_idx: [0, 5]
            wfm_smoothing_window_size: [11, 11, 21]
            first_maximum_ignore_leading_bins: 0

    # Compute the leading edge peakiness
    # This class will add three parameters to the l1p classifier data group:
    #  1. Leading edge peakiness
    - label: "Compute Leading Edge Peakiness"
      stage: post_ocean_segment_extraction
      module_name: pysiral.waveform
      class_name: L1PLeadingEdgePeakiness
      options:
        # Power threshold for the normalized waveform
        # that the first maximum has to exceed
        window_size: 3

    # Compute the Late Tail to Peak Power Parameter
    # This class will one parameter to the l1p classifier data group:
    #  1. late tail to peak power
    - label: "Compute Late Tail to Peak Power (LTPP)"
      stage: post_ocean_segment_extraction
      module_name: pysiral.waveform
      class_name: L1PLateTail2PeakPower
      options:
        # Index Window after maximum power for late tail power
        late_tail_window_idx:
          sar: [50, 70]


    # Compute Trailing Edge Properties
    # This class will several parameter to the l1p classifier data group:
    #  1. trailing_edge_decay (Müller et al., 2023)
    #  2. trailing_edge_decay_fit_quality
    #  3. trailing_edge_decay_median_absolute_diff (Müller et al., 2023)
    #  4. trailing_edge_width
    #  5. trailing_edge_quality
    - label: "Compute Trailing Edge Decay"
      stage: post_ocean_segment_extraction
      module_name: pysiral.waveform
      class_name: L1PTrailingEdgeProperties
      options:
        use_multiprocessing: True
        valid_first_maximum_index_range: [10, 246]
        trailing_edge_width:
          oversample_factor: 10
          trailing_edge_end_power_treshold_normed: 0.05
